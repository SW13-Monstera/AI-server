#name: Deploy to dev env
#
#on:
#    push:
#        branches:
#            - dev
#jobs:
#    build-docker:
#        runs-on: ubuntu-latest
#        steps:
#            - name: checkout
#              uses: actions/checkout@v2
#
#            - uses: conda-incubator/setup-miniconda@v2
#              with:
#                  auto-update-conda: true
#                  python-version: '3.8.13'
#
#            - name: install bentoml
#              shell: bash
#              run: |
#                  pip3 install -r requirements.txt
#
#            - name: aws configure
#              uses: aws-actions/configure-aws-credentials@v1
#              with:
#                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#                  aws-region: ap-northeast-2
#
#            - name: Login to ECR
#              id: login-ecr
#              uses: aws-actions/amazon-ecr-login@v1
#
#            - name: build docker file and setting deploy files
#              env:
#                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#                  ECR_REPOSITORY: cs-broker/ai
#                  IMAGE_TAG: ${{ github.sha }}
#              run: |
#                  bentoml build
#                  bentoml containerize keyword_service:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#                  mkdir scripts
#                  touch scripts/deploy.sh
#                  echo "aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY" >> scripts/deploy.sh
#                  echo "docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> scripts/deploy.sh
#                  echo "docker run -p 3000:3000 -e PROFILE=dev -d --restart always --name csbroker-ai-api $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> scripts/deploy.sh
#            - name: upload to s3
#              env:
#                  IMAGE_TAG: ${{ github.sha }}
#                  BUCKET_NAME: cs-broker-bucket
#              run: |
#                  zip -r ai-deploy-$IMAGE_TAG.zip ./scripts appspec.yml
#                  aws s3 cp --region ap-northeast-2 --acl private ./ai-deploy-$IMAGE_TAG.zip s3://$BUCKET_NAME
#            - name: start deploy
#              env:
#                  IMAGE_TAG: ${{ github.sha }}
#                  APP_NAME: csbroker-dev-api-ai-codedeploy
#                  GROUP_NAME: csbroker-dev-ai-api
#              run: |
#                  aws deploy create-deployment --application-name $APP_NAME \
#                  --deployment-config-name CodeDeployDefault.OneAtATime \
#                  --deployment-group-name $GROUP_NAME \
#                  --s3-location bucket=cs-broker-bucket,bundleType=zip,key=ai-deploy-$IMAGE_TAG.zip
